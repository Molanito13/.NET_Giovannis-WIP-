<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /O9//w8+N4m5LxcXRQAAAABJRU5ErkJggg==
</value>
  </data>
</root>